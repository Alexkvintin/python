from matplotlib.pyplot import *  # додаємо бібліотеку для побудови графіків

kkd = []  # KKD (НЕ ЗАПОВНЯТИ)
win = []  # виграш у силі, який дає похила площина (НЕ ЗАПОВНЯТИ)
a_full = []  # повнa роботa (НЕ ЗАПОВНЯТИ)
a = []  # кориснa роботa (НЕ ЗАПОВНЯТИ)
l =   # довжина похилої площини (ПОТРІБНО ЗАПОВНИТИ, ПІСЛЯ ПРОВЕДЕННЯ ДОСЛІДІВ)
h =   # висота похилої площини (ПОТРІБНО ЗАПОВНИТИ, ПІСЛЯ ПРОВЕДЕННЯ ДОСЛІДІВ)
p = []  # вагу бруска (ПОТРІБНО ЗАПОВНИТИ ЧЕРЕЗ КОМУ В СЕРЕДЕНІ ДУЖОК, ПІСЛЯ ПРОВЕДЕННЯ ДОСЛІДІВ)
f = []  # силу тяги (ПОТРІБНО ЗАПОВНИТИ ЧЕРЕЗ КОМУ В СЕРЕДЕНІ ДУЖОК, ПІСЛЯ ПРОВЕДЕННЯ ДОСЛІДІВ)
g = 10  # гравітаційна стала (НЕ ЗМІНЮВАТИ)
counter = 0  # лічильник (НЕ ЗМІНЮВАТИ)

for i in p:
    a_full.append(f[counter] * l)  # розрахунок повної роботи
    a.append(p[counter] * h)  # розрахунок корисної роботи
    win.append(p[counter] / f[counter])  # розрахунок виграшу у силі
    kkd.append((a[counter] / a_full[counter]) * 100)  # розрахунок KKD
    print(f'Для досліду {counter + 1}: ')  # виведення отриманих значень на екран
    print(f'значення корисної роботи = {a[counter]}')  # виведення отриманих значень на екран
    print(f'значення повної роботи = {a_full[counter]}')  # виведення отриманих значень на екран
    print(f'значення виграшу у силі = {win[counter]}')  # виведення отриманих значень на екран
    print(f'значення ККД = {kkd[counter]}')  # виведення отриманих значень на екран
    counter = counter + 1  # лічильник (НЕ ЗМІНЮВАТИ)

plot(p, f, 'b-')  # побудова графіку за вказаними координатами
savefig('Визначення ККД похилої площини.png')  # збереження файлу з графіком
show()  # відображення графіку на екрані
